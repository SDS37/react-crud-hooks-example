{"ast":null,"code":"import _objectSpread from \"/Users/sal/Desktop/github/react-crud-hooks-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sal/Desktop/github/react-crud-hooks-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sal/Desktop/github/react-crud-hooks-example/src/ice-cream/EditIceCream.js\";\nimport React, { useState, useEffect } from 'react';\nimport Main from '../structure/Main';\nimport LoaderMessage from '../structure/LoaderMessage';\nimport IceCream from './IceCream';\nimport { getMenuItem, putMenuItem, deleteMenuItem } from '../data/iceCreamData';\nimport PropTypes from 'prop-types';\n\nconst EditIceCream = ({\n  match,\n  history\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        menuItem = _useState4[0],\n        setMenuItem = _useState4[1];\n\n  useEffect(() => {\n    let isMounted = true;\n    getMenuItem(match.params.menuItemId).then(item => {\n      if (isMounted) {\n        setMenuItem(item);\n        setIsLoading(false);\n      }\n    }).catch(err => {\n      if (err.response.status === 404 && isMounted) {\n        history.replace('/', {\n          focus: true\n        });\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [match.params.menuItemId, history]);\n\n  const onSubmitHandler = updatedItem => {\n    putMenuItem(_objectSpread({\n      id: menuItem.id\n    }, updatedItem)).then(() => {\n      history.push('/', {\n        focus: true\n      });\n    });\n  };\n\n  const onDeleteHandler = () => {\n    deleteMenuItem(match.params.menuItemId).then(() => {\n      history.replace('/', {\n        focus: true\n      });\n    });\n  };\n\n  return React.createElement(Main, {\n    headingText: \"Update this beauty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(LoaderMessage, {\n    loadingMsg: \"Loading ice cream.\",\n    doneMsg: \"Ice cream loaded.\",\n    isLoading: isLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), !isLoading && React.createElement(IceCream, Object.assign({}, menuItem, {\n    onDelete: onDeleteHandler,\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nEditIceCream.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    replace: PropTypes.func.isRequired\n  })\n};\nexport default EditIceCream;","map":{"version":3,"sources":["/Users/sal/Desktop/github/react-crud-hooks-example/src/ice-cream/EditIceCream.js"],"names":["React","useState","useEffect","Main","LoaderMessage","IceCream","getMenuItem","putMenuItem","deleteMenuItem","PropTypes","EditIceCream","match","history","isLoading","setIsLoading","menuItem","setMenuItem","isMounted","params","menuItemId","then","item","catch","err","response","status","replace","focus","onSubmitHandler","updatedItem","id","push","onDeleteHandler","propTypes","shape","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Main from '../structure/Main';\nimport LoaderMessage from '../structure/LoaderMessage';\nimport IceCream from './IceCream';\nimport { getMenuItem, putMenuItem, deleteMenuItem } from '../data/iceCreamData';\nimport PropTypes from 'prop-types';\n\nconst EditIceCream = ({ match, history }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [menuItem, setMenuItem] = useState({});\n\n  useEffect(() => {\n    let isMounted = true;\n    getMenuItem(match.params.menuItemId)\n      .then(item => {\n        if (isMounted) {\n          setMenuItem(item);\n          setIsLoading(false);\n        }\n      })\n      .catch(err => {\n        if (err.response.status === 404 && isMounted) {\n          history.replace('/', { focus: true });\n        }\n      });\n    return () => {\n      isMounted = false;\n    };\n  }, [match.params.menuItemId, history]);\n\n  const onSubmitHandler = updatedItem => {\n    putMenuItem({ id: menuItem.id, ...updatedItem }).then(() => {\n      history.push('/', { focus: true });\n    });\n  };\n\n  const onDeleteHandler = () => {\n    deleteMenuItem(match.params.menuItemId).then(() => {\n      history.replace('/', { focus: true });\n    });\n  };\n\n  return (\n    <Main headingText=\"Update this beauty\">\n      <LoaderMessage\n        loadingMsg=\"Loading ice cream.\"\n        doneMsg=\"Ice cream loaded.\"\n        isLoading={isLoading}\n      />\n      {!isLoading && (\n        <IceCream\n          {...menuItem}\n          onDelete={onDeleteHandler}\n          onSubmit={onSubmitHandler}\n        />\n      )}\n    </Main>\n  );\n};\n\nEditIceCream.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n    replace: PropTypes.func.isRequired,\n  }),\n};\n\nexport default EditIceCream;\n"]},"metadata":{},"sourceType":"module"}