{"ast":null,"code":"import _slicedToArray from \"/Users/sal/Desktop/github/react-crud-hooks-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n\nconst useValidation = (value, errorId, showError, validatorFn, isRequired, compareValue = null) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  useEffect(() => {\n    setError(validatorFn(value, compareValue));\n  }, [value, compareValue, validatorFn]);\n  return [error, {\n    'aria-describedby': error && showError ? errorId : null,\n    'aria-invalid': error && showError ? 'true' : 'false',\n    'aria-required': isRequired ? 'true' : null,\n    required: isRequired\n  }];\n};\n\nexport default useValidation;","map":{"version":3,"sources":["/Users/sal/Desktop/github/react-crud-hooks-example/src/hooks/useValidation.js"],"names":["useState","useEffect","useValidation","value","errorId","showError","validatorFn","isRequired","compareValue","error","setError","required"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,CACpBC,KADoB,EAEpBC,OAFoB,EAGpBC,SAHoB,EAIpBC,WAJoB,EAKpBC,UALoB,EAMpBC,YAAY,GAAG,IANK,KAOjB;AAAA,oBACuBR,QAAQ,CAAC,EAAD,CAD/B;AAAA;AAAA,QACIS,KADJ;AAAA,QACWC,QADX;;AAGHT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACJ,WAAW,CAACH,KAAD,EAAQK,YAAR,CAAZ,CAAR;AACD,GAFQ,EAEN,CAACL,KAAD,EAAQK,YAAR,EAAsBF,WAAtB,CAFM,CAAT;AAIA,SAAO,CACLG,KADK,EAEL;AACE,wBAAoBA,KAAK,IAAIJ,SAAT,GAAqBD,OAArB,GAA+B,IADrD;AAEE,oBAAgBK,KAAK,IAAIJ,SAAT,GAAqB,MAArB,GAA8B,OAFhD;AAGE,qBAAiBE,UAAU,GAAG,MAAH,GAAY,IAHzC;AAIEI,IAAAA,QAAQ,EAAEJ;AAJZ,GAFK,CAAP;AASD,CAvBD;;AAyBA,eAAeL,aAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useValidation = (\n  value,\n  errorId,\n  showError,\n  validatorFn,\n  isRequired,\n  compareValue = null\n) => {\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setError(validatorFn(value, compareValue));\n  }, [value, compareValue, validatorFn]);\n\n  return [\n    error,\n    {\n      'aria-describedby': error && showError ? errorId : null,\n      'aria-invalid': error && showError ? 'true' : 'false',\n      'aria-required': isRequired ? 'true' : null,\n      required: isRequired,\n    },\n  ];\n};\n\nexport default useValidation;\n"]},"metadata":{},"sourceType":"module"}