{"ast":null,"code":"import { css as _css } from \"emotion\";\nvar _jsxFileName = \"/Users/sal/Desktop/github/react-crud-hooks-example/src/structure/LoaderMessage.js\";\n\nconst loaderMessageStyle =\n/*#__PURE__*/\n_css(process.env.NODE_ENV === \"production\" ? {\n  name: \"fgizqg-loaderMessageStyle\",\n  styles: \".loading{font-size:3em;font-weight:bold;width:100%;text-align:center;margin:0;padding-bottom:3em;}label:loaderMessageStyle;\"\n} : {\n  name: \"fgizqg-loaderMessageStyle\",\n  styles: \".loading{font-size:3em;font-weight:bold;width:100%;text-align:center;margin:0;padding-bottom:3em;}label:loaderMessageStyle;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWwvRGVza3RvcC9naXRodWIvcmVhY3QtY3J1ZC1ob29rcy1leGFtcGxlL3NyYy9zdHJ1Y3R1cmUvTG9hZGVyTWVzc2FnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJOEIiLCJmaWxlIjoiL1VzZXJzL3NhbC9EZXNrdG9wL2dpdGh1Yi9yZWFjdC1jcnVkLWhvb2tzLWV4YW1wbGUvc3JjL3N0cnVjdHVyZS9Mb2FkZXJNZXNzYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VMYXlvdXRFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0Jztcbi8vIGltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCB7IGNzcyB9IGZyb20gJ2Vtb3Rpb24vbWFjcm8nO1xuY29uc3QgbG9hZGVyTWVzc2FnZVN0eWxlID0gY3NzYFxuICAubG9hZGluZyB7XG4gICAgZm9udC1zaXplOiAzZW07XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogM2VtO1xuICB9XG5gO1xuXG5jb25zdCBMb2FkZXJNZXNzYWdlID0gKHtMb2FkaW5nTWVzc2FnZSwgaXNMb2FkaW5nfSkgPT4gaXNMb2FkaW5nID8gPHA+e0xvYWRpbmdNZXNzYWdlfTwvcD46IG51bGw7XG5cbmV4cG9ydCBkZWZhdWx0IExvYWRlck1lc3NhZ2U7XG5cbi8vIGNvbnN0IExvYWRlck1lc3NhZ2UgPSAoeyBsb2FkaW5nTXNnLCBkb25lTXNnLCBpc0xvYWRpbmcgfSkgPT4ge1xuLy8gICBjb25zdCBpc0xvYWRpbmdQcmV2aW91c1ZhbHVlID0gdXNlUmVmKG51bGwpO1xuLy8gICBjb25zdCBsb2FkaW5nTWVzc2FnZURlbGF5ID0gdXNlUmVmKG51bGwpO1xuLy8gICBjb25zdCBkb25lTWVzc2FnZURlbGF5ID0gdXNlUmVmKG51bGwpO1xuLy8gICBjb25zdCBbc2hvd0xvYWRpbmdNZXNzYWdlLCBzZXRTaG93TG9hZGluZ01lc3NhZ2VdID0gdXNlU3RhdGUoZmFsc2UpO1xuLy8gICBjb25zdCBbc2hvd0RvbmVNZXNzYWdlLCBzZXRTaG93RG9uZU1lc3NhZ2VdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4vLyAgIHVzZUxheW91dEVmZmVjdCgoKSA9PiB7XG4vLyAgICAgaWYgKGlzTG9hZGluZykge1xuLy8gICAgICAgbG9hZGluZ01lc3NhZ2VEZWxheS5jdXJyZW50ID0gc2V0VGltZW91dCgoKSA9PiB7XG4vLyAgICAgICAgIHNldFNob3dMb2FkaW5nTWVzc2FnZSh0cnVlKTtcbi8vICAgICAgIH0sIDQwMCk7XG4vLyAgICAgfSBlbHNlIHtcbi8vICAgICAgIGlmIChpc0xvYWRpbmdQcmV2aW91c1ZhbHVlLmN1cnJlbnQpIHtcbi8vICAgICAgICAgc2V0U2hvd0RvbmVNZXNzYWdlKHRydWUpO1xuLy8gICAgICAgICBkb25lTWVzc2FnZURlbGF5LmN1cnJlbnQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbi8vICAgICAgICAgICBzZXRTaG93RG9uZU1lc3NhZ2UoZmFsc2UpO1xuLy8gICAgICAgICB9LCAzMDApO1xuLy8gICAgICAgfVxuLy8gICAgIH1cbi8vICAgICBpc0xvYWRpbmdQcmV2aW91c1ZhbHVlLmN1cnJlbnQgPSBpc0xvYWRpbmc7XG4vLyAgICAgcmV0dXJuICgpID0+IHtcbi8vICAgICAgIHNldFNob3dMb2FkaW5nTWVzc2FnZShmYWxzZSk7XG4vLyAgICAgICBzZXRTaG93RG9uZU1lc3NhZ2UoZmFsc2UpO1xuLy8gICAgICAgY2xlYXJUaW1lb3V0KGxvYWRpbmdNZXNzYWdlRGVsYXkuY3VycmVudCk7XG4vLyAgICAgICBjbGVhclRpbWVvdXQoZG9uZU1lc3NhZ2VEZWxheS5jdXJyZW50KTtcbi8vICAgICB9O1xuLy8gICB9LCBbaXNMb2FkaW5nXSk7XG5cbi8vICAgcmV0dXJuIChcbi8vICAgICA8ZGl2XG4vLyAgICAgICBhcmlhLWxpdmU9XCJhc3NlcnRpdmVcIlxuLy8gICAgICAgYXJpYS1hdG9taWM9XCJ0cnVlXCJcbi8vICAgICAgIGNsYXNzTmFtZT17bG9hZGVyTWVzc2FnZVN0eWxlfVxuLy8gICAgID5cbi8vICAgICAgIHtzaG93TG9hZGluZ01lc3NhZ2UgJiYgPHAgY2xhc3NOYW1lPVwibG9hZGluZ1wiPntsb2FkaW5nTXNnfTwvcD59XG4vLyAgICAgICB7c2hvd0RvbmVNZXNzYWdlICYmIDxwIGNsYXNzTmFtZT1cInZpc3VhbGx5LWhpZGRlblwiPntkb25lTXNnfTwvcD59XG4vLyAgICAgPC9kaXY+XG4vLyAgICk7XG4vLyB9O1xuXG4vLyBMb2FkZXJNZXNzYWdlLnByb3BUeXBlcyA9IHtcbi8vICAgbG9hZGluZ01zZzogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuLy8gICBkb25lTXNnOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4vLyAgIGlzTG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4vLyB9O1xuXG4vLyBleHBvcnQgZGVmYXVsdCBMb2FkZXJNZXNzYWdlO1xuIl19 */\"\n});\n\nconst LoaderMessage = ({\n  LoadingMessage,\n  isLoading\n}) => isLoading ? React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, LoadingMessage) : null;\n\nexport default LoaderMessage; // const LoaderMessage = ({ loadingMsg, doneMsg, isLoading }) => {\n//   const isLoadingPreviousValue = useRef(null);\n//   const loadingMessageDelay = useRef(null);\n//   const doneMessageDelay = useRef(null);\n//   const [showLoadingMessage, setShowLoadingMessage] = useState(false);\n//   const [showDoneMessage, setShowDoneMessage] = useState(false);\n//   useLayoutEffect(() => {\n//     if (isLoading) {\n//       loadingMessageDelay.current = setTimeout(() => {\n//         setShowLoadingMessage(true);\n//       }, 400);\n//     } else {\n//       if (isLoadingPreviousValue.current) {\n//         setShowDoneMessage(true);\n//         doneMessageDelay.current = setTimeout(() => {\n//           setShowDoneMessage(false);\n//         }, 300);\n//       }\n//     }\n//     isLoadingPreviousValue.current = isLoading;\n//     return () => {\n//       setShowLoadingMessage(false);\n//       setShowDoneMessage(false);\n//       clearTimeout(loadingMessageDelay.current);\n//       clearTimeout(doneMessageDelay.current);\n//     };\n//   }, [isLoading]);\n//   return (\n//     <div\n//       aria-live=\"assertive\"\n//       aria-atomic=\"true\"\n//       className={loaderMessageStyle}\n//     >\n//       {showLoadingMessage && <p className=\"loading\">{loadingMsg}</p>}\n//       {showDoneMessage && <p className=\"visually-hidden\">{doneMsg}</p>}\n//     </div>\n//   );\n// };\n// LoaderMessage.propTypes = {\n//   loadingMsg: PropTypes.string.isRequired,\n//   doneMsg: PropTypes.string.isRequired,\n//   isLoading: PropTypes.bool,\n// };\n// export default LoaderMessage;","map":{"version":3,"sources":["/Users/sal/Desktop/github/react-crud-hooks-example/src/structure/LoaderMessage.js"],"names":["loaderMessageStyle","LoaderMessage","LoadingMessage","isLoading"],"mappings":";;;AAIA,MAAMA,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB;;AAWA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,CAAD,KAAiCA,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,cAAJ,CAAH,GAA4B,IAA5F;;AAEA,eAAeD,aAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState, useLayoutEffect, useRef } from 'react';\n// import PropTypes from 'prop-types';\n\nimport { css } from 'emotion/macro';\nconst loaderMessageStyle = css`\n  .loading {\n    font-size: 3em;\n    font-weight: bold;\n    width: 100%;\n    text-align: center;\n    margin: 0;\n    padding-bottom: 3em;\n  }\n`;\n\nconst LoaderMessage = ({LoadingMessage, isLoading}) => isLoading ? <p>{LoadingMessage}</p>: null;\n\nexport default LoaderMessage;\n\n// const LoaderMessage = ({ loadingMsg, doneMsg, isLoading }) => {\n//   const isLoadingPreviousValue = useRef(null);\n//   const loadingMessageDelay = useRef(null);\n//   const doneMessageDelay = useRef(null);\n//   const [showLoadingMessage, setShowLoadingMessage] = useState(false);\n//   const [showDoneMessage, setShowDoneMessage] = useState(false);\n\n//   useLayoutEffect(() => {\n//     if (isLoading) {\n//       loadingMessageDelay.current = setTimeout(() => {\n//         setShowLoadingMessage(true);\n//       }, 400);\n//     } else {\n//       if (isLoadingPreviousValue.current) {\n//         setShowDoneMessage(true);\n//         doneMessageDelay.current = setTimeout(() => {\n//           setShowDoneMessage(false);\n//         }, 300);\n//       }\n//     }\n//     isLoadingPreviousValue.current = isLoading;\n//     return () => {\n//       setShowLoadingMessage(false);\n//       setShowDoneMessage(false);\n//       clearTimeout(loadingMessageDelay.current);\n//       clearTimeout(doneMessageDelay.current);\n//     };\n//   }, [isLoading]);\n\n//   return (\n//     <div\n//       aria-live=\"assertive\"\n//       aria-atomic=\"true\"\n//       className={loaderMessageStyle}\n//     >\n//       {showLoadingMessage && <p className=\"loading\">{loadingMsg}</p>}\n//       {showDoneMessage && <p className=\"visually-hidden\">{doneMsg}</p>}\n//     </div>\n//   );\n// };\n\n// LoaderMessage.propTypes = {\n//   loadingMsg: PropTypes.string.isRequired,\n//   doneMsg: PropTypes.string.isRequired,\n//   isLoading: PropTypes.bool,\n// };\n\n// export default LoaderMessage;\n"]},"metadata":{},"sourceType":"module"}